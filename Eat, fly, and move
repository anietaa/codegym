
The public CanFly, CanMove, and CanEat interfaces have already been written.
Add these interfaces to the Dog, Car, Duck, and Airplane classes.

Requirements:
The Solution class must have a CanFly interface with only one method called fly().
The Solution class must have a CanMove interface with only one method called move().
The Solution class must have an CanEat interface with only one method called eat().
A dog must be able to move around and eat.
A car must be able to move.
A plane must be able to move and fly.
A duck should be able to move, fly, and eat.





package com.codegym.task.task12.task1218;

/* 
Eat, fly, and move

*/

public class Solution {
    public static void main(String[] args) {

    }

    public interface CanFly {
        public void fly();
    }

    public interface CanMove {
        public void move();
    }

    public interface CanEat {
        public void eat();
    }

    public class Dog implements CanMove,CanEat {
        public void move(){
            System.out.println("moving");
        }
        public void eat(){
            System.out.println("eating") ;
        }
    }

    public class Duck implements CanMove,CanEat,CanFly {
       public void move(){
          System.out.println("moving");
       }
       public void eat(){
          System.out.println("eating");
       }
       public void fly(){
           System.out.println("flying");
       }
    }

    public class Car implements CanMove{
       public void move(){
           System.out.println("moving");
       }
    }

    public class Airplane implements CanMove,CanFly {
        public void fly(){
            System.out.println("flying");
        }
         public void move(){
          System.out.println("moving");
       }
    }
}
