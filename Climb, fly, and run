
1. In the Solution class, make a public CanFly interface with a void fly() method.
2. In the Solution class, make a public CanClimb interface with a void climb() method.
3. In the Solution class, make a public CanRun interface with a void run() method.
4. Use common sense to decide which interfaces you need to add to each class.
5. Add interfaces to the Cat, Dog, Tiger, and Duck classes.

Requirements:
The Solution class must have a CanFly interface with a void fly() method.
The Solution class must have a CanClimb interface with a void climb() method.
The Solution class must have a CanRun interface with a void run() method.
A Cat object must be able to run (support the CanRun interface) and climb trees (support the CanClimb interface).
A Dog object must be able to run (support the CanRun interface).
The Tiger class must be a Cat.
A Duck object must be able to run (support the CanRun interface) and fly (support the CanFly interface).








package com.codegym.task.task12.task1226;

/* 
Climb, fly, and run

*/

public class Solution {

    public static void main(String[] args) {

    }
    
    public interface CanFly{
         void fly();
    }
    
    public interface CanClimb{
         void climb();
    }
    public interface CanRun{
         void run();
        
    }

    public class Cat implements CanRun,CanClimb{
        public void run(){
            System.out.println("running");
        }
         public  void climb(){
            System.out.println("climbing");
        }
    }

    public class Dog implements CanRun{
         public void run(){
            System.out.println("running");
        }
         
    }

    public class Tiger extends Cat {
        public  void run(){
            System.out.println("running");
        }
        public  void climb(){
            System.out.println("climbing");
        }
    }

    public class Duck implements CanRun,CanFly {
         public void run(){
            System.out.println("running");
        }
         
         public  void fly(){
            System.out.println("flying");
        }
    }
}
