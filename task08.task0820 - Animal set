1. Inside the Solution class, create public static classes Cat and Dog.
2. Implement the createCats method, which should return a set with 4 cats.
3. Implement the createDogs method, which should return a set with 3 dogs.
4. Implement the join method, which should return a combined set of all the animals (all the cats and dogs).
5. Implement the removeCats method, which should remove from the set pets all cats in the set cats.
6. Implement the printPets method, which should display all the animals in the set pets.
Each animal should be on a new line.

Requirements:
•	The program should display text on the screen.
•	There should be public static classes Cat and Dog inside the Solution class.
•	The Solution class's createCats() method must return a Set containing 4 cats.
•	The Solution class's createDogs() method must return a Set containing 3 dogs.
•	The Solution class's join() method should return a combined set of all the animals (all the cats and dogs).
•	The removeCats() method should remove from the set pets all cats in



package com.codegym.task.task08.task0820;

import java.util.HashSet;
import java.util.Set;

/* 
Animal set

*/

public class Solution {
    public static void main(String[] args) {
        Set<Cat> cats = createCats();
        Set<Dog> dogs = createDogs();

        Set<Object> pets = join(cats, dogs);
        printPets(pets);

        removeCats(pets, cats);
        printPets(pets);
    }

    public static Set<Cat> createCats() {
        HashSet<Cat> result = new HashSet<Cat>();

        Cat cat1 = new Cat();
        Cat cat2 = new Cat();
        Cat cat3 = new Cat();
        Cat cat4 = new Cat();
        
        result.add(cat1);
        result.add(cat2);
        result.add(cat3);
        result.add(cat4);
       
        return result;
    }

    public static Set<Dog> createDogs() {
        HashSet<Dog> dogSet = new HashSet<>();
        
        Dog dog1 = new Dog();
        Dog dog2 = new Dog();
        Dog dog3 = new Dog();
        
        dogSet.add(dog1);
        dogSet.add(dog2);
        dogSet.add(dog3);
        
        
       
        
        return dogSet;
    }

    public static Set<Object> join(Set<Cat> cats, Set<Dog> dogs) {
       HashSet<Object> pets = new HashSet<>();
       pets.addAll(cats);
       pets.addAll(dogs);
        return pets;
    }

    public static void removeCats(Set<Object> pets, Set<Cat> cats) {
        for(Cat cat: cats){
            pets.remove(cat);
        }
    }

    public static void printPets(Set<Object> pets) {
        for(Object pet:pets){
            System.out.println(pet);
        }
    }

    public static class Cat{
        
    }
    public static class Dog{
         
    }
}
